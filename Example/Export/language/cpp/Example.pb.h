// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Example.proto

#ifndef PROTOBUF_Example_2eproto__INCLUDED
#define PROTOBUF_Example_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Example_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsExampleImpl();
void InitDefaultsExample();
void InitDefaultsExampleTable_DataEntry_DoNotUseImpl();
void InitDefaultsExampleTable_DataEntry_DoNotUse();
void InitDefaultsExampleTableImpl();
void InitDefaultsExampleTable();
inline void InitDefaults() {
  InitDefaultsExample();
  InitDefaultsExampleTable_DataEntry_DoNotUse();
  InitDefaultsExampleTable();
}
}  // namespace protobuf_Example_2eproto
class Example;
class ExampleDefaultTypeInternal;
extern ExampleDefaultTypeInternal _Example_default_instance_;
class ExampleTable;
class ExampleTableDefaultTypeInternal;
extern ExampleTableDefaultTypeInternal _ExampleTable_default_instance_;
class ExampleTable_DataEntry_DoNotUse;
class ExampleTable_DataEntry_DoNotUseDefaultTypeInternal;
extern ExampleTable_DataEntry_DoNotUseDefaultTypeInternal _ExampleTable_DataEntry_DoNotUse_default_instance_;

// ===================================================================

class Example : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Example) */ {
 public:
  Example();
  virtual ~Example();

  Example(const Example& from);

  inline Example& operator=(const Example& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Example(Example&& from) noexcept
    : Example() {
    *this = ::std::move(from);
  }

  inline Example& operator=(Example&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Example& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Example* internal_default_instance() {
    return reinterpret_cast<const Example*>(
               &_Example_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Example* other);
  friend void swap(Example& a, Example& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Example* New() const PROTOBUF_FINAL { return New(NULL); }

  Example* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Example& from);
  void MergeFrom(const Example& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Example* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double name9 = 10;
  int name9_size() const;
  void clear_name9();
  static const int kName9FieldNumber = 10;
  double name9(int index) const;
  void set_name9(int index, double value);
  void add_name9(double value);
  const ::google::protobuf::RepeatedField< double >&
      name9() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_name9();

  // repeated float name10 = 11;
  int name10_size() const;
  void clear_name10();
  static const int kName10FieldNumber = 11;
  float name10(int index) const;
  void set_name10(int index, float value);
  void add_name10(float value);
  const ::google::protobuf::RepeatedField< float >&
      name10() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_name10();

  // repeated int32 name11 = 12;
  int name11_size() const;
  void clear_name11();
  static const int kName11FieldNumber = 12;
  ::google::protobuf::int32 name11(int index) const;
  void set_name11(int index, ::google::protobuf::int32 value);
  void add_name11(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      name11() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_name11();

  // repeated int64 name12 = 13;
  int name12_size() const;
  void clear_name12();
  static const int kName12FieldNumber = 13;
  ::google::protobuf::int64 name12(int index) const;
  void set_name12(int index, ::google::protobuf::int64 value);
  void add_name12(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      name12() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_name12();

  // repeated uint32 name13 = 14;
  int name13_size() const;
  void clear_name13();
  static const int kName13FieldNumber = 14;
  ::google::protobuf::uint32 name13(int index) const;
  void set_name13(int index, ::google::protobuf::uint32 value);
  void add_name13(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      name13() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_name13();

  // repeated uint64 name14 = 15;
  int name14_size() const;
  void clear_name14();
  static const int kName14FieldNumber = 15;
  ::google::protobuf::uint64 name14(int index) const;
  void set_name14(int index, ::google::protobuf::uint64 value);
  void add_name14(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      name14() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_name14();

  // repeated bool name15 = 16;
  int name15_size() const;
  void clear_name15();
  static const int kName15FieldNumber = 16;
  bool name15(int index) const;
  void set_name15(int index, bool value);
  void add_name15(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      name15() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_name15();

  // repeated string name16 = 17;
  int name16_size() const;
  void clear_name16();
  static const int kName16FieldNumber = 17;
  const ::std::string& name16(int index) const;
  ::std::string* mutable_name16(int index);
  void set_name16(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_name16(int index, ::std::string&& value);
  #endif
  void set_name16(int index, const char* value);
  void set_name16(int index, const char* value, size_t size);
  ::std::string* add_name16();
  void add_name16(const ::std::string& value);
  #if LANG_CXX11
  void add_name16(::std::string&& value);
  #endif
  void add_name16(const char* value);
  void add_name16(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& name16() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name16();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name8 = 9;
  void clear_name8();
  static const int kName8FieldNumber = 9;
  const ::std::string& name8() const;
  void set_name8(const ::std::string& value);
  #if LANG_CXX11
  void set_name8(::std::string&& value);
  #endif
  void set_name8(const char* value);
  void set_name8(const char* value, size_t size);
  ::std::string* mutable_name8();
  ::std::string* release_name8();
  void set_allocated_name8(::std::string* name8);

  // double name1 = 2;
  void clear_name1();
  static const int kName1FieldNumber = 2;
  double name1() const;
  void set_name1(double value);

  // float name2 = 3;
  void clear_name2();
  static const int kName2FieldNumber = 3;
  float name2() const;
  void set_name2(float value);

  // int32 name3 = 4;
  void clear_name3();
  static const int kName3FieldNumber = 4;
  ::google::protobuf::int32 name3() const;
  void set_name3(::google::protobuf::int32 value);

  // int64 name4 = 5;
  void clear_name4();
  static const int kName4FieldNumber = 5;
  ::google::protobuf::int64 name4() const;
  void set_name4(::google::protobuf::int64 value);

  // uint64 name6 = 7;
  void clear_name6();
  static const int kName6FieldNumber = 7;
  ::google::protobuf::uint64 name6() const;
  void set_name6(::google::protobuf::uint64 value);

  // uint32 name5 = 6;
  void clear_name5();
  static const int kName5FieldNumber = 6;
  ::google::protobuf::uint32 name5() const;
  void set_name5(::google::protobuf::uint32 value);

  // bool name7 = 8;
  void clear_name7();
  static const int kName7FieldNumber = 8;
  bool name7() const;
  void set_name7(bool value);

  // @@protoc_insertion_point(class_scope:Example)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > name9_;
  mutable int _name9_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > name10_;
  mutable int _name10_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > name11_;
  mutable int _name11_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > name12_;
  mutable int _name12_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > name13_;
  mutable int _name13_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > name14_;
  mutable int _name14_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > name15_;
  mutable int _name15_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name16_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name8_;
  double name1_;
  float name2_;
  ::google::protobuf::int32 name3_;
  ::google::protobuf::int64 name4_;
  ::google::protobuf::uint64 name6_;
  ::google::protobuf::uint32 name5_;
  bool name7_;
  mutable int _cached_size_;
  friend struct ::protobuf_Example_2eproto::TableStruct;
  friend void ::protobuf_Example_2eproto::InitDefaultsExampleImpl();
};
// -------------------------------------------------------------------

class ExampleTable_DataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ExampleTable_DataEntry_DoNotUse, 
    ::std::string, ::Example,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ExampleTable_DataEntry_DoNotUse, 
    ::std::string, ::Example,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ExampleTable_DataEntry_DoNotUse();
  ExampleTable_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ExampleTable_DataEntry_DoNotUse& other);
  static const ExampleTable_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ExampleTable_DataEntry_DoNotUse*>(&_ExampleTable_DataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ExampleTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ExampleTable) */ {
 public:
  ExampleTable();
  virtual ~ExampleTable();

  ExampleTable(const ExampleTable& from);

  inline ExampleTable& operator=(const ExampleTable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExampleTable(ExampleTable&& from) noexcept
    : ExampleTable() {
    *this = ::std::move(from);
  }

  inline ExampleTable& operator=(ExampleTable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExampleTable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExampleTable* internal_default_instance() {
    return reinterpret_cast<const ExampleTable*>(
               &_ExampleTable_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ExampleTable* other);
  friend void swap(ExampleTable& a, ExampleTable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExampleTable* New() const PROTOBUF_FINAL { return New(NULL); }

  ExampleTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExampleTable& from);
  void MergeFrom(const ExampleTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExampleTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .Example> Data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::Example >&
      data() const;
  ::google::protobuf::Map< ::std::string, ::Example >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:ExampleTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      ExampleTable_DataEntry_DoNotUse,
      ::std::string, ::Example,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > data_;
  mutable int _cached_size_;
  friend struct ::protobuf_Example_2eproto::TableStruct;
  friend void ::protobuf_Example_2eproto::InitDefaultsExampleTableImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Example

// string id = 1;
inline void Example::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Example::id() const {
  // @@protoc_insertion_point(field_get:Example.id)
  return id_.GetNoArena();
}
inline void Example::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Example.id)
}
#if LANG_CXX11
inline void Example::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Example.id)
}
#endif
inline void Example::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Example.id)
}
inline void Example::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Example.id)
}
inline ::std::string* Example::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:Example.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Example::release_id() {
  // @@protoc_insertion_point(field_release:Example.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Example::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Example.id)
}

// double name1 = 2;
inline void Example::clear_name1() {
  name1_ = 0;
}
inline double Example::name1() const {
  // @@protoc_insertion_point(field_get:Example.name1)
  return name1_;
}
inline void Example::set_name1(double value) {
  
  name1_ = value;
  // @@protoc_insertion_point(field_set:Example.name1)
}

// float name2 = 3;
inline void Example::clear_name2() {
  name2_ = 0;
}
inline float Example::name2() const {
  // @@protoc_insertion_point(field_get:Example.name2)
  return name2_;
}
inline void Example::set_name2(float value) {
  
  name2_ = value;
  // @@protoc_insertion_point(field_set:Example.name2)
}

// int32 name3 = 4;
inline void Example::clear_name3() {
  name3_ = 0;
}
inline ::google::protobuf::int32 Example::name3() const {
  // @@protoc_insertion_point(field_get:Example.name3)
  return name3_;
}
inline void Example::set_name3(::google::protobuf::int32 value) {
  
  name3_ = value;
  // @@protoc_insertion_point(field_set:Example.name3)
}

// int64 name4 = 5;
inline void Example::clear_name4() {
  name4_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Example::name4() const {
  // @@protoc_insertion_point(field_get:Example.name4)
  return name4_;
}
inline void Example::set_name4(::google::protobuf::int64 value) {
  
  name4_ = value;
  // @@protoc_insertion_point(field_set:Example.name4)
}

// uint32 name5 = 6;
inline void Example::clear_name5() {
  name5_ = 0u;
}
inline ::google::protobuf::uint32 Example::name5() const {
  // @@protoc_insertion_point(field_get:Example.name5)
  return name5_;
}
inline void Example::set_name5(::google::protobuf::uint32 value) {
  
  name5_ = value;
  // @@protoc_insertion_point(field_set:Example.name5)
}

// uint64 name6 = 7;
inline void Example::clear_name6() {
  name6_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Example::name6() const {
  // @@protoc_insertion_point(field_get:Example.name6)
  return name6_;
}
inline void Example::set_name6(::google::protobuf::uint64 value) {
  
  name6_ = value;
  // @@protoc_insertion_point(field_set:Example.name6)
}

// bool name7 = 8;
inline void Example::clear_name7() {
  name7_ = false;
}
inline bool Example::name7() const {
  // @@protoc_insertion_point(field_get:Example.name7)
  return name7_;
}
inline void Example::set_name7(bool value) {
  
  name7_ = value;
  // @@protoc_insertion_point(field_set:Example.name7)
}

// string name8 = 9;
inline void Example::clear_name8() {
  name8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Example::name8() const {
  // @@protoc_insertion_point(field_get:Example.name8)
  return name8_.GetNoArena();
}
inline void Example::set_name8(const ::std::string& value) {
  
  name8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Example.name8)
}
#if LANG_CXX11
inline void Example::set_name8(::std::string&& value) {
  
  name8_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Example.name8)
}
#endif
inline void Example::set_name8(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Example.name8)
}
inline void Example::set_name8(const char* value, size_t size) {
  
  name8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Example.name8)
}
inline ::std::string* Example::mutable_name8() {
  
  // @@protoc_insertion_point(field_mutable:Example.name8)
  return name8_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Example::release_name8() {
  // @@protoc_insertion_point(field_release:Example.name8)
  
  return name8_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Example::set_allocated_name8(::std::string* name8) {
  if (name8 != NULL) {
    
  } else {
    
  }
  name8_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name8);
  // @@protoc_insertion_point(field_set_allocated:Example.name8)
}

// repeated double name9 = 10;
inline int Example::name9_size() const {
  return name9_.size();
}
inline void Example::clear_name9() {
  name9_.Clear();
}
inline double Example::name9(int index) const {
  // @@protoc_insertion_point(field_get:Example.name9)
  return name9_.Get(index);
}
inline void Example::set_name9(int index, double value) {
  name9_.Set(index, value);
  // @@protoc_insertion_point(field_set:Example.name9)
}
inline void Example::add_name9(double value) {
  name9_.Add(value);
  // @@protoc_insertion_point(field_add:Example.name9)
}
inline const ::google::protobuf::RepeatedField< double >&
Example::name9() const {
  // @@protoc_insertion_point(field_list:Example.name9)
  return name9_;
}
inline ::google::protobuf::RepeatedField< double >*
Example::mutable_name9() {
  // @@protoc_insertion_point(field_mutable_list:Example.name9)
  return &name9_;
}

// repeated float name10 = 11;
inline int Example::name10_size() const {
  return name10_.size();
}
inline void Example::clear_name10() {
  name10_.Clear();
}
inline float Example::name10(int index) const {
  // @@protoc_insertion_point(field_get:Example.name10)
  return name10_.Get(index);
}
inline void Example::set_name10(int index, float value) {
  name10_.Set(index, value);
  // @@protoc_insertion_point(field_set:Example.name10)
}
inline void Example::add_name10(float value) {
  name10_.Add(value);
  // @@protoc_insertion_point(field_add:Example.name10)
}
inline const ::google::protobuf::RepeatedField< float >&
Example::name10() const {
  // @@protoc_insertion_point(field_list:Example.name10)
  return name10_;
}
inline ::google::protobuf::RepeatedField< float >*
Example::mutable_name10() {
  // @@protoc_insertion_point(field_mutable_list:Example.name10)
  return &name10_;
}

// repeated int32 name11 = 12;
inline int Example::name11_size() const {
  return name11_.size();
}
inline void Example::clear_name11() {
  name11_.Clear();
}
inline ::google::protobuf::int32 Example::name11(int index) const {
  // @@protoc_insertion_point(field_get:Example.name11)
  return name11_.Get(index);
}
inline void Example::set_name11(int index, ::google::protobuf::int32 value) {
  name11_.Set(index, value);
  // @@protoc_insertion_point(field_set:Example.name11)
}
inline void Example::add_name11(::google::protobuf::int32 value) {
  name11_.Add(value);
  // @@protoc_insertion_point(field_add:Example.name11)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Example::name11() const {
  // @@protoc_insertion_point(field_list:Example.name11)
  return name11_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Example::mutable_name11() {
  // @@protoc_insertion_point(field_mutable_list:Example.name11)
  return &name11_;
}

// repeated int64 name12 = 13;
inline int Example::name12_size() const {
  return name12_.size();
}
inline void Example::clear_name12() {
  name12_.Clear();
}
inline ::google::protobuf::int64 Example::name12(int index) const {
  // @@protoc_insertion_point(field_get:Example.name12)
  return name12_.Get(index);
}
inline void Example::set_name12(int index, ::google::protobuf::int64 value) {
  name12_.Set(index, value);
  // @@protoc_insertion_point(field_set:Example.name12)
}
inline void Example::add_name12(::google::protobuf::int64 value) {
  name12_.Add(value);
  // @@protoc_insertion_point(field_add:Example.name12)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Example::name12() const {
  // @@protoc_insertion_point(field_list:Example.name12)
  return name12_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Example::mutable_name12() {
  // @@protoc_insertion_point(field_mutable_list:Example.name12)
  return &name12_;
}

// repeated uint32 name13 = 14;
inline int Example::name13_size() const {
  return name13_.size();
}
inline void Example::clear_name13() {
  name13_.Clear();
}
inline ::google::protobuf::uint32 Example::name13(int index) const {
  // @@protoc_insertion_point(field_get:Example.name13)
  return name13_.Get(index);
}
inline void Example::set_name13(int index, ::google::protobuf::uint32 value) {
  name13_.Set(index, value);
  // @@protoc_insertion_point(field_set:Example.name13)
}
inline void Example::add_name13(::google::protobuf::uint32 value) {
  name13_.Add(value);
  // @@protoc_insertion_point(field_add:Example.name13)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Example::name13() const {
  // @@protoc_insertion_point(field_list:Example.name13)
  return name13_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Example::mutable_name13() {
  // @@protoc_insertion_point(field_mutable_list:Example.name13)
  return &name13_;
}

// repeated uint64 name14 = 15;
inline int Example::name14_size() const {
  return name14_.size();
}
inline void Example::clear_name14() {
  name14_.Clear();
}
inline ::google::protobuf::uint64 Example::name14(int index) const {
  // @@protoc_insertion_point(field_get:Example.name14)
  return name14_.Get(index);
}
inline void Example::set_name14(int index, ::google::protobuf::uint64 value) {
  name14_.Set(index, value);
  // @@protoc_insertion_point(field_set:Example.name14)
}
inline void Example::add_name14(::google::protobuf::uint64 value) {
  name14_.Add(value);
  // @@protoc_insertion_point(field_add:Example.name14)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Example::name14() const {
  // @@protoc_insertion_point(field_list:Example.name14)
  return name14_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Example::mutable_name14() {
  // @@protoc_insertion_point(field_mutable_list:Example.name14)
  return &name14_;
}

// repeated bool name15 = 16;
inline int Example::name15_size() const {
  return name15_.size();
}
inline void Example::clear_name15() {
  name15_.Clear();
}
inline bool Example::name15(int index) const {
  // @@protoc_insertion_point(field_get:Example.name15)
  return name15_.Get(index);
}
inline void Example::set_name15(int index, bool value) {
  name15_.Set(index, value);
  // @@protoc_insertion_point(field_set:Example.name15)
}
inline void Example::add_name15(bool value) {
  name15_.Add(value);
  // @@protoc_insertion_point(field_add:Example.name15)
}
inline const ::google::protobuf::RepeatedField< bool >&
Example::name15() const {
  // @@protoc_insertion_point(field_list:Example.name15)
  return name15_;
}
inline ::google::protobuf::RepeatedField< bool >*
Example::mutable_name15() {
  // @@protoc_insertion_point(field_mutable_list:Example.name15)
  return &name15_;
}

// repeated string name16 = 17;
inline int Example::name16_size() const {
  return name16_.size();
}
inline void Example::clear_name16() {
  name16_.Clear();
}
inline const ::std::string& Example::name16(int index) const {
  // @@protoc_insertion_point(field_get:Example.name16)
  return name16_.Get(index);
}
inline ::std::string* Example::mutable_name16(int index) {
  // @@protoc_insertion_point(field_mutable:Example.name16)
  return name16_.Mutable(index);
}
inline void Example::set_name16(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Example.name16)
  name16_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Example::set_name16(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Example.name16)
  name16_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Example::set_name16(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name16_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Example.name16)
}
inline void Example::set_name16(int index, const char* value, size_t size) {
  name16_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Example.name16)
}
inline ::std::string* Example::add_name16() {
  // @@protoc_insertion_point(field_add_mutable:Example.name16)
  return name16_.Add();
}
inline void Example::add_name16(const ::std::string& value) {
  name16_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Example.name16)
}
#if LANG_CXX11
inline void Example::add_name16(::std::string&& value) {
  name16_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Example.name16)
}
#endif
inline void Example::add_name16(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name16_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Example.name16)
}
inline void Example::add_name16(const char* value, size_t size) {
  name16_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Example.name16)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Example::name16() const {
  // @@protoc_insertion_point(field_list:Example.name16)
  return name16_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Example::mutable_name16() {
  // @@protoc_insertion_point(field_mutable_list:Example.name16)
  return &name16_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ExampleTable

// map<string, .Example> Data = 1;
inline int ExampleTable::data_size() const {
  return data_.size();
}
inline void ExampleTable::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::Example >&
ExampleTable::data() const {
  // @@protoc_insertion_point(field_map:ExampleTable.Data)
  return data_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::Example >*
ExampleTable::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:ExampleTable.Data)
  return data_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Example_2eproto__INCLUDED
